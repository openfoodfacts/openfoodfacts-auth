{"version":3,"file":"Groups-DZi7t_CJ.js","sources":["../../../../../../../src/groups/Groups.tsx"],"sourcesContent":["import {\n  Checkbox,\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useEnvironment } from \"@keycloak/keycloak-ui-shared\";\nimport { getGroups } from \"../api/methods\";\nimport { Group } from \"../api/representations\";\nimport { Page } from \"../components/page/Page\";\nimport { usePromise } from \"../utils/usePromise\";\n\nexport const Groups = () => {\n  const { t } = useTranslation();\n  const context = useEnvironment();\n\n  const [groups, setGroups] = useState<Group[]>([]);\n  const [directMembership, setDirectMembership] = useState(false);\n\n  usePromise(\n    (signal) => getGroups({ signal, context }),\n    (groups) => {\n      if (!directMembership) {\n        groups.forEach((el) =>\n          getParents(\n            el,\n            groups,\n            groups.map(({ path }) => path),\n          ),\n        );\n      }\n      setGroups(groups);\n    },\n    [directMembership],\n  );\n\n  const getParents = (el: Group, groups: Group[], groupsPaths: string[]) => {\n    const parentPath = el.path.slice(0, el.path.lastIndexOf(\"/\"));\n    if (parentPath && !groupsPaths.includes(parentPath)) {\n      el = {\n        name: parentPath.slice(parentPath.lastIndexOf(\"/\") + 1),\n        path: parentPath,\n      };\n      groups.push(el);\n      groupsPaths.push(parentPath);\n\n      getParents(el, groups, groupsPaths);\n    }\n  };\n\n  return (\n    <Page title={t(\"groups\")} description={t(\"groupDescriptionLabel\")}>\n      <DataList id=\"groups-list\" aria-label={t(\"groups\")} isCompact>\n        <DataListItem\n          id=\"groups-list-header\"\n          aria-label={t(\"groupsListHeader\")}\n        >\n          <DataListItemRow>\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell key=\"directMembership-header\">\n                  <Checkbox\n                    label={t(\"directMembership\")}\n                    id=\"directMembership-checkbox\"\n                    data-testid=\"directMembership-checkbox\"\n                    isChecked={directMembership}\n                    onChange={(_event, checked) => setDirectMembership(checked)}\n                  />\n                </DataListCell>,\n              ]}\n            />\n          </DataListItemRow>\n        </DataListItem>\n        <DataListItem\n          id=\"groups-list-columns-names\"\n          aria-label={t(\"groupsListColumnsNames\")}\n        >\n          <DataListItemRow>\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell key=\"group-name-header\" width={2}>\n                  <strong>{t(\"name\")}</strong>\n                </DataListCell>,\n                <DataListCell key=\"group-path-header\" width={2}>\n                  <strong>{t(\"path\")}</strong>\n                </DataListCell>,\n                <DataListCell key=\"group-direct-membership-header\" width={2}>\n                  <strong>{t(\"directMembership\")}</strong>\n                </DataListCell>,\n              ]}\n            />\n          </DataListItemRow>\n        </DataListItem>\n        {groups.map((group, appIndex) => (\n          <DataListItem\n            id={`${appIndex}-group`}\n            key={\"group-\" + appIndex}\n            aria-labelledby=\"groups-list\"\n          >\n            <DataListItemRow>\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell\n                    data-testid={`group[${appIndex}].name`}\n                    width={2}\n                    key={\"name-\" + appIndex}\n                  >\n                    {group.name}\n                  </DataListCell>,\n                  <DataListCell\n                    id={`${appIndex}-group-path`}\n                    width={2}\n                    key={\"path-\" + appIndex}\n                  >\n                    {group.path}\n                  </DataListCell>,\n                  <DataListCell\n                    id={`${appIndex}-group-directMembership`}\n                    width={2}\n                    key={\"directMembership-\" + appIndex}\n                  >\n                    <Checkbox\n                      id={`${appIndex}-checkbox-directMembership`}\n                      isChecked={group.id != null}\n                      isDisabled={true}\n                    />\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n          </DataListItem>\n        ))}\n      </DataList>\n    </Page>\n  );\n};\n\nexport default Groups;\n"],"names":["Groups","t","useTranslation","context","useEnvironment","groups","setGroups","useState","directMembership","setDirectMembership","usePromise","signal","getGroups","el","getParents","path","groupsPaths","parentPath","Page","jsxs","DataList","jsx","DataListItem","DataListItemRow","DataListItemCells","DataListCell","Checkbox","_event","checked","group","appIndex"],"mappings":"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"}