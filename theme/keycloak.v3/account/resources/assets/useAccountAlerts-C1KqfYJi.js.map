{"version":3,"file":"useAccountAlerts-C1KqfYJi.js","sources":["../../../../../../../src/utils/useAccountAlerts.ts"],"sourcesContent":["import { useAlerts } from \"@keycloak/keycloak-ui-shared\";\nimport { AlertVariant } from \"@patternfly/react-core\";\nimport { useCallback, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ApiError } from \"../api/parse-response\";\n\nexport function useAccountAlerts() {\n  const { t } = useTranslation();\n  const { addAlert, addError } = useAlerts();\n  const addAccountError = useCallback(\n    (messageKey: string, error: unknown) => {\n      if (!(error instanceof ApiError)) {\n        addError(messageKey, error);\n        return;\n      }\n\n      const message = t(messageKey, { error: error.message });\n      addAlert(message, AlertVariant.danger, error.description);\n    },\n    [addAlert, addError, t],\n  );\n\n  return useMemo(\n    () => ({ addAlert, addError: addAccountError }),\n    [addAccountError, addAlert],\n  );\n}\n"],"names":["useAccountAlerts","useTranslation","addAlert","addError","useAlerts","addAccountError","useCallback","messageKey","error","ApiError","message","AlertVariant","useMemo"],"mappings":"gHAOO,SAASA,GAAmB,CAC3B,KAAA,CAAE,CAAE,EAAIC,EAAe,EACvB,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EACnCC,EAAkBC,EACtB,CAACC,EAAoBC,IAAmB,CAClC,GAAA,EAAEA,aAAiBC,GAAW,CAChCN,EAASI,EAAYC,CAAK,EAC1B,MAAA,CAGF,MAAME,EAAU,EAAEH,EAAY,CAAE,MAAOC,EAAM,QAAS,EACtDN,EAASQ,EAASC,EAAa,OAAQH,EAAM,WAAW,CAC1D,EACA,CAACN,EAAUC,EAAU,CAAC,CACxB,EAEO,OAAAS,EACL,KAAO,CAAE,SAAAV,EAAU,SAAUG,IAC7B,CAACA,EAAiBH,CAAQ,CAC5B,CACF"}