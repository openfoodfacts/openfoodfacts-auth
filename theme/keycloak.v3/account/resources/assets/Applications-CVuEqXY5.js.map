{"version":3,"file":"Applications-CVuEqXY5.js","sources":["../../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListToggle.js","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-icons@5.4.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-icons/dist/esm/icons/info-alt-icon.js","../../../../../../../src/applications/Applications.tsx"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list.mjs';\nimport { Button, ButtonVariant } from '../Button';\nexport const DataListToggle = (_a) => {\n    var { className = '', isExpanded = false, 'aria-controls': ariaControls = '', 'aria-label': ariaLabel = 'Details', rowid = '', id, buttonProps } = _a, props = __rest(_a, [\"className\", \"isExpanded\", 'aria-controls', 'aria-label', \"rowid\", \"id\", \"buttonProps\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.dataListItemControl, className) }, props),\n        React.createElement(\"div\", { className: css(styles.dataListToggle) },\n            React.createElement(Button, Object.assign({ id: id, variant: ButtonVariant.plain, \"aria-controls\": ariaControls !== '' && ariaControls, \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabel !== 'Details' ? null : `${rowid} ${id}`, \"aria-expanded\": isExpanded }, buttonProps),\n                React.createElement(\"div\", { className: css(styles.dataListToggleIcon) },\n                    React.createElement(AngleRightIcon, null))))));\n};\nDataListToggle.displayName = 'DataListToggle';\n//# sourceMappingURL=DataListToggle.js.map","import { createIcon } from '../createIcon';\n\nexport const InfoAltIconConfig = {\n  name: 'InfoAltIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M592,369 L592,289 C592.013862,284.755109 590.320137,280.682962 587.3,277.7 C584.338831,274.647672 580.252355,272.947987 576,273 L464,273 C459.755109,272.986138 455.682962,274.679863 452.7,277.7 C449.647672,280.661169 447.947987,284.747645 447.99884,289 L447.99884,369 C447.986138,373.244891 449.679863,377.317038 452.7,380.3 C455.661169,383.352328 459.747645,385.052013 464,385 L576,385 C580.244891,385.013862 584.317038,383.320137 587.3,380.3 C590.359349,377.343612 592.060354,373.253963 592,369 Z M592,705 L592,465 C592,456.163444 584.836556,449 576,449 L432,449 C423.163444,449 416,456.163444 416,465 L416,497 C416,505.836556 423.163444,513 432,513 L448,513 L448,705 L416,705 C407.163444,705 400,712.163444 400,721 L400,753 C400,761.836556 407.163444,769 416,769 L624,769 C632.836556,769 640,761.836556 640,753 L640,721 C640,712.163444 632.836556,705 624,705 L592,705 Z M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 Z M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const InfoAltIcon = createIcon(InfoAltIconConfig);\n\nexport default InfoAltIcon;","import {\n  ContinueCancelModal,\n  label,\n  useEnvironment,\n} from \"@keycloak/keycloak-ui-shared\";\nimport {\n  Button,\n  DataList,\n  DataListCell,\n  DataListContent,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  DataListToggle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Grid,\n  GridItem,\n  Spinner,\n} from \"@patternfly/react-core\";\nimport {\n  CheckIcon,\n  ExternalLinkAltIcon,\n  InfoAltIcon,\n} from \"@patternfly/react-icons\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { deleteConsent, getApplications } from \"../api/methods\";\nimport { ClientRepresentation } from \"../api/representations\";\nimport { Page } from \"../components/page/Page\";\nimport { TFuncKey } from \"../i18n\";\nimport { formatDate } from \"../utils/formatDate\";\nimport { useAccountAlerts } from \"../utils/useAccountAlerts\";\nimport { usePromise } from \"../utils/usePromise\";\n\ntype Application = ClientRepresentation & {\n  open: boolean;\n};\n\nexport const Applications = () => {\n  const { t } = useTranslation();\n  const context = useEnvironment();\n  const { addAlert, addError } = useAccountAlerts();\n\n  const [applications, setApplications] = useState<Application[]>();\n  const [key, setKey] = useState(1);\n  const refresh = () => setKey(key + 1);\n\n  usePromise(\n    (signal) => getApplications({ signal, context }),\n    (clients) => setApplications(clients.map((c) => ({ ...c, open: false }))),\n    [key],\n  );\n\n  const toggleOpen = (clientId: string) => {\n    setApplications([\n      ...applications!.map((a) =>\n        a.clientId === clientId ? { ...a, open: !a.open } : a,\n      ),\n    ]);\n  };\n\n  const removeConsent = async (id: string) => {\n    try {\n      await deleteConsent(context, id);\n      refresh();\n      addAlert(t(\"removeConsentSuccess\"));\n    } catch (error) {\n      addError(\"removeConsentError\", error);\n    }\n  };\n\n  if (!applications) {\n    return <Spinner />;\n  }\n\n  return (\n    <Page title={t(\"application\")} description={t(\"applicationsIntroMessage\")}>\n      <DataList id=\"applications-list\" aria-label={t(\"application\")}>\n        <DataListItem\n          id=\"applications-list-header\"\n          aria-labelledby=\"Columns names\"\n        >\n          <DataListItemRow>\n            <span style={{ visibility: \"hidden\", height: 55 }}>\n              <DataListToggle\n                id=\"applications-list-header-invisible-toggle\"\n                aria-controls=\"applications-list-content\"\n              />\n            </span>\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell\n                  key=\"applications-list-client-id-header\"\n                  width={2}\n                  className=\"pf-v5-u-pt-md\"\n                >\n                  <strong>{t(\"name\")}</strong>\n                </DataListCell>,\n                <DataListCell\n                  key=\"applications-list-app-type-header\"\n                  width={2}\n                  className=\"pf-v5-u-pt-md\"\n                >\n                  <strong>{t(\"applicationType\")}</strong>\n                </DataListCell>,\n                <DataListCell\n                  key=\"applications-list-status\"\n                  width={2}\n                  className=\"pf-v5-u-pt-md\"\n                >\n                  <strong>{t(\"status\")}</strong>\n                </DataListCell>,\n              ]}\n            />\n          </DataListItemRow>\n        </DataListItem>\n        {applications.map((application) => (\n          <DataListItem\n            key={application.clientId}\n            aria-labelledby=\"applications-list\"\n            data-testid=\"applications-list-item\"\n            isExpanded={application.open}\n          >\n            <DataListItemRow className=\"pf-v5-u-align-items-center\">\n              <DataListToggle\n                onClick={() => toggleOpen(application.clientId)}\n                isExpanded={application.open}\n                id={`toggle-${application.clientId}`}\n                aria-controls={`content-${application.clientId}`}\n              />\n              <DataListItemCells\n                className=\"pf-v5-u-align-items-center\"\n                dataListCells={[\n                  <DataListCell width={2} key={`client${application.clientId}`}>\n                    {application.effectiveUrl && (\n                      <Button\n                        className=\"pf-v5-u-pl-0 title-case\"\n                        component=\"a\"\n                        variant=\"link\"\n                        onClick={() => window.open(application.effectiveUrl)}\n                      >\n                        {label(\n                          t,\n                          application.clientName || application.clientId,\n                        )}{\" \"}\n                        <ExternalLinkAltIcon />\n                      </Button>\n                    )}\n                    {!application.effectiveUrl && (\n                      <>\n                        {label(\n                          t,\n                          application.clientName || application.clientId,\n                        )}\n                      </>\n                    )}\n                  </DataListCell>,\n                  <DataListCell\n                    width={2}\n                    key={`internal${application.clientId}`}\n                  >\n                    {application.userConsentRequired\n                      ? t(\"thirdPartyApp\")\n                      : t(\"internalApp\")}\n                    {application.offlineAccess ? \", \" + t(\"offlineAccess\") : \"\"}\n                  </DataListCell>,\n                  <DataListCell width={2} key={`status${application.clientId}`}>\n                    {application.inUse ? t(\"inUse\") : t(\"notInUse\")}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n\n            <DataListContent\n              id={`content-${application.clientId}`}\n              className=\"pf-v5-u-pl-4xl\"\n              aria-label={t(\"applicationDetails\", {\n                clientId: application.clientId,\n              })}\n              isHidden={!application.open}\n            >\n              <DescriptionList>\n                <DescriptionListGroup>\n                  <DescriptionListTerm>{t(\"client\")}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    {application.clientId}\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n                {application.description && (\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>\n                      {t(\"description\")}\n                    </DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {application.description}\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                )}\n                {application.effectiveUrl && (\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>URL</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      {application.effectiveUrl.split('\"')}\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                )}\n                {application.consent && (\n                  <>\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"hasAccessTo\")}\n                      </DescriptionListTerm>\n                      {application.consent.grantedScopes.map((scope) => (\n                        <DescriptionListDescription key={`scope${scope.id}`}>\n                          <CheckIcon /> {t(scope.name as TFuncKey)}\n                        </DescriptionListDescription>\n                      ))}\n                    </DescriptionListGroup>\n                    {application.tosUri && (\n                      <DescriptionListGroup>\n                        <DescriptionListTerm>\n                          {t(\"termsOfService\")}\n                        </DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {application.tosUri}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )}\n                    {application.policyUri && (\n                      <DescriptionListGroup>\n                        <DescriptionListTerm>\n                          {t(\"privacyPolicy\")}\n                        </DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {application.policyUri}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )}\n                    {application.logoUri && (\n                      <DescriptionListGroup>\n                        <DescriptionListTerm>{t(\"logo\")}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          <img src={application.logoUri} />\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )}\n                    <DescriptionListGroup>\n                      <DescriptionListTerm>\n                        {t(\"accessGrantedOn\")}\n                      </DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {formatDate(new Date(application.consent.createdDate))}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                  </>\n                )}\n              </DescriptionList>\n              {(application.consent || application.offlineAccess) && (\n                <Grid hasGutter>\n                  <hr />\n                  <GridItem>\n                    <ContinueCancelModal\n                      buttonTitle={t(\"removeAccess\")}\n                      modalTitle={t(\"removeAccess\")}\n                      continueLabel={t(\"confirm\")}\n                      cancelLabel={t(\"cancel\")}\n                      buttonVariant=\"secondary\"\n                      onContinue={() => removeConsent(application.clientId)}\n                    >\n                      {t(\"removeModalMessage\", { name: application.clientId })}\n                    </ContinueCancelModal>\n                  </GridItem>\n                  <GridItem>\n                    <InfoAltIcon /> {t(\"infoMessage\")}\n                  </GridItem>\n                </Grid>\n              )}\n            </DataListContent>\n          </DataListItem>\n        ))}\n      </DataList>\n    </Page>\n  );\n};\n\nexport default Applications;\n"],"names":["DataListToggle","_a","className","isExpanded","ariaControls","ariaLabel","rowid","id","buttonProps","props","__rest","React","css","styles","Button","ButtonVariant","AngleRightIcon","InfoAltIconConfig","InfoAltIcon","createIcon","Applications","t","useTranslation","context","useEnvironment","addAlert","addError","useAccountAlerts","applications","setApplications","useState","key","setKey","refresh","usePromise","signal","getApplications","clients","c","toggleOpen","clientId","a","removeConsent","deleteConsent","error","Page","DataList","jsx","DataListItem","DataListItemRow","DataListItemCells","DataListCell","application","jsxs","label","ExternalLinkAltIcon","Fragment","DataListContent","DescriptionList","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","scope","CheckIcon","formatDate","Grid","GridItem","ContinueCancelModal","Spinner"],"mappings":"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","x_google_ignoreList":[0,1]}