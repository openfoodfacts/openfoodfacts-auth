{"version":3,"file":"Label-DfTZiadY.js","sources":["../../../../../../../../../../node_modules/.pnpm/@patternfly+react-styles@5.4.0/node_modules/@patternfly/react-styles/css/components/Label/label.mjs","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-styles@5.4.0/node_modules/@patternfly/react-styles/css/components/Label/label-group.mjs","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-tokens@5.4.0/node_modules/@patternfly/react-tokens/dist/esm/c_label__text_MaxWidth.js","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js"],"sourcesContent":["import './label.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"label\": \"pf-v5-c-label\",\n  \"labelActions\": \"pf-v5-c-label__actions\",\n  \"labelContent\": \"pf-v5-c-label__content\",\n  \"labelIcon\": \"pf-v5-c-label__icon\",\n  \"labelText\": \"pf-v5-c-label__text\",\n  \"modifiers\": {\n    \"compact\": \"pf-m-compact\",\n    \"blue\": \"pf-m-blue\",\n    \"green\": \"pf-m-green\",\n    \"orange\": \"pf-m-orange\",\n    \"red\": \"pf-m-red\",\n    \"purple\": \"pf-m-purple\",\n    \"cyan\": \"pf-m-cyan\",\n    \"gold\": \"pf-m-gold\",\n    \"outline\": \"pf-m-outline\",\n    \"overflow\": \"pf-m-overflow\",\n    \"add\": \"pf-m-add\",\n    \"editable\": \"pf-m-editable\",\n    \"editableActive\": \"pf-m-editable-active\",\n    \"disabled\": \"pf-m-disabled\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import './label-group.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"labelGroup\": \"pf-v5-c-label-group\",\n  \"labelGroupClose\": \"pf-v5-c-label-group__close\",\n  \"labelGroupLabel\": \"pf-v5-c-label-group__label\",\n  \"labelGroupList\": \"pf-v5-c-label-group__list\",\n  \"labelGroupListItem\": \"pf-v5-c-label-group__list-item\",\n  \"labelGroupMain\": \"pf-v5-c-label-group__main\",\n  \"labelGroupTextarea\": \"pf-v5-c-label-group__textarea\",\n  \"modifiers\": {\n    \"category\": \"pf-m-category\",\n    \"vertical\": \"pf-m-vertical\",\n    \"editable\": \"pf-m-editable\",\n    \"textarea\": \"pf-m-textarea\"\n  }\n};","export const c_label__text_MaxWidth = {\n  \"name\": \"--pf-v5-c-label__text--MaxWidth\",\n  \"value\": \"100%\",\n  \"var\": \"var(--pf-v5-c-label__text--MaxWidth)\"\n};\nexport default c_label__text_MaxWidth;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label.mjs';\nimport labelGrpStyles from '@patternfly/react-styles/css/components/Label/label-group.mjs';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport { css } from '@patternfly/react-styles';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\nimport cssTextMaxWidth from '@patternfly/react-tokens/dist/esm/c_label__text_MaxWidth';\nconst colorStyles = {\n    blue: styles.modifiers.blue,\n    cyan: styles.modifiers.cyan,\n    green: styles.modifiers.green,\n    orange: styles.modifiers.orange,\n    purple: styles.modifiers.purple,\n    red: styles.modifiers.red,\n    gold: styles.modifiers.gold,\n    grey: ''\n};\nexport const Label = (_a) => {\n    var { children, className = '', color = 'grey', variant = 'filled', isCompact = false, isDisabled = false, isEditable = false, editableProps, textMaxWidth, tooltipPosition, icon, onClose, onClick: onLabelClick, onEditCancel, onEditComplete, closeBtn, closeBtnAriaLabel, closeBtnProps, href, isOverflowLabel, render } = _a, props = __rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"isCompact\", \"isDisabled\", \"isEditable\", \"editableProps\", \"textMaxWidth\", \"tooltipPosition\", \"icon\", \"onClose\", \"onClick\", \"onEditCancel\", \"onEditComplete\", \"closeBtn\", \"closeBtnAriaLabel\", \"closeBtnProps\", \"href\", \"isOverflowLabel\", \"render\"]);\n    const [isEditableActive, setIsEditableActive] = useState(false);\n    const [currValue, setCurrValue] = useState(children);\n    const editableButtonRef = React.useRef();\n    const editableInputRef = React.useRef();\n    React.useEffect(() => {\n        document.addEventListener('mousedown', onDocMouseDown);\n        document.addEventListener('keydown', onKeyDown);\n        return () => {\n            document.removeEventListener('mousedown', onDocMouseDown);\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    });\n    React.useEffect(() => {\n        if (onLabelClick && href) {\n            // eslint-disable-next-line no-console\n            console.warn('Link labels cannot have onClick passed, this results in invalid HTML. Please remove either the href or onClick prop.');\n        }\n        else if (onLabelClick && isEditable) {\n            // eslint-disable-next-line no-console\n            console.warn('Editable labels cannot have onClick passed, clicking starts the label edit process. Please remove either the isEditable or onClick prop.');\n        }\n    }, [onLabelClick, href, isEditable]);\n    const onDocMouseDown = (event) => {\n        if (isEditableActive &&\n            editableInputRef &&\n            editableInputRef.current &&\n            !editableInputRef.current.contains(event.target)) {\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n        }\n    };\n    const onKeyDown = (event) => {\n        var _a, _b;\n        const key = event.key;\n        if ((!isEditableActive &&\n            (!editableButtonRef ||\n                !editableButtonRef.current ||\n                !editableButtonRef.current.contains(event.target))) ||\n            (isEditableActive &&\n                (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target)))) {\n            return;\n        }\n        if (isEditableActive && (key === 'Enter' || key === 'Tab')) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n            (_a = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        if (isEditableActive && key === 'Escape') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            // Reset div text to initial children prop - pre-edit\n            if (editableInputRef.current.value) {\n                editableInputRef.current.value = children;\n                onEditCancel && onEditCancel(event, children);\n            }\n            setIsEditableActive(false);\n            (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        if (!isEditableActive && key === 'Enter') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            setIsEditableActive(true);\n            // Set cursor position to end of text\n            const el = event.target;\n            const range = document.createRange();\n            const sel = window.getSelection();\n            range.selectNodeContents(el);\n            range.collapse(false);\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    };\n    const isClickableDisabled = (href || onLabelClick) && isDisabled;\n    const defaultCloseButton = (React.createElement(Button, Object.assign({ type: \"button\", variant: \"plain\", onClick: onClose, \"aria-label\": closeBtnAriaLabel || `Close ${children}` }, (isClickableDisabled && { isDisabled: true }), closeBtnProps),\n        React.createElement(TimesIcon, null)));\n    const closeButton = React.createElement(\"span\", { className: css(styles.labelActions) }, closeBtn || defaultCloseButton);\n    const textRef = React.createRef();\n    // ref to apply tooltip when rendered is used\n    const componentRef = React.useRef();\n    const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n    useIsomorphicLayoutEffect(() => {\n        const currTextRef = isEditable ? editableButtonRef : textRef;\n        if (!isEditableActive) {\n            setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);\n        }\n    }, [isEditableActive]);\n    const content = (React.createElement(React.Fragment, null,\n        icon && React.createElement(\"span\", { className: css(styles.labelIcon) }, icon),\n        React.createElement(\"span\", Object.assign({ ref: textRef, className: css(styles.labelText) }, (textMaxWidth && {\n            style: {\n                [cssTextMaxWidth.name]: textMaxWidth\n            }\n        })), children)));\n    React.useEffect(() => {\n        if (isEditableActive && editableInputRef) {\n            editableInputRef.current && editableInputRef.current.focus();\n        }\n    }, [editableInputRef, isEditableActive]);\n    const updateVal = () => {\n        setCurrValue(editableInputRef.current.value);\n    };\n    let LabelComponentChildElement = 'span';\n    if (href) {\n        LabelComponentChildElement = 'a';\n    }\n    else if (isEditable || (onLabelClick && !isOverflowLabel)) {\n        LabelComponentChildElement = 'button';\n    }\n    const clickableLabelProps = {\n        type: 'button',\n        onClick: onLabelClick\n    };\n    const isButton = LabelComponentChildElement === 'button';\n    const labelComponentChildProps = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ className: css(styles.labelContent) }, (isTooltipVisible && { tabIndex: 0 })), (href && { href })), (href && isDisabled && { onClick: (event) => event.preventDefault() })), (isButton && clickableLabelProps)), (isEditable && Object.assign({ ref: editableButtonRef, onClick: (e) => {\n            setIsEditableActive(true);\n            e.stopPropagation();\n        } }, editableProps))), (isClickableDisabled && isButton && { disabled: true })), (isClickableDisabled && href && { tabIndex: -1, 'aria-disabled': true }));\n    let labelComponentChild = (React.createElement(LabelComponentChildElement, Object.assign({}, labelComponentChildProps), content));\n    if (render) {\n        labelComponentChild = (React.createElement(React.Fragment, null,\n            isTooltipVisible && React.createElement(Tooltip, { triggerRef: componentRef, content: children, position: tooltipPosition }),\n            render({\n                className: styles.labelContent,\n                content,\n                componentRef\n            })));\n    }\n    else if (isTooltipVisible) {\n        labelComponentChild = (React.createElement(Tooltip, { content: children, position: tooltipPosition }, labelComponentChild));\n    }\n    const LabelComponent = (isOverflowLabel ? 'button' : 'span');\n    return (React.createElement(LabelComponent, Object.assign({}, props, { className: css(styles.label, isClickableDisabled && styles.modifiers.disabled, colorStyles[color], variant === 'outline' && styles.modifiers.outline, isOverflowLabel && styles.modifiers.overflow, isCompact && styles.modifiers.compact, isEditable && labelGrpStyles.modifiers.editable, isEditableActive && styles.modifiers.editableActive, className), onClick: isOverflowLabel ? onLabelClick : undefined }, (LabelComponent === 'button' && { type: 'button' })),\n        !isEditableActive && labelComponentChild,\n        !isEditableActive && onClose && closeButton,\n        isEditableActive && (React.createElement(\"input\", Object.assign({ className: css(styles.labelContent), type: \"text\", id: \"editable-input\", ref: editableInputRef, value: currValue, onChange: updateVal }, editableProps)))));\n};\nLabel.displayName = 'Label';\n//# sourceMappingURL=Label.js.map"],"names":["labelStyles","styles","c_label__text_MaxWidth","colorStyles","Label","_a","children","className","color","variant","isCompact","isDisabled","isEditable","editableProps","textMaxWidth","tooltipPosition","icon","onClose","onLabelClick","onEditCancel","onEditComplete","closeBtn","closeBtnAriaLabel","closeBtnProps","href","isOverflowLabel","render","props","__rest","isEditableActive","setIsEditableActive","useState","currValue","setCurrValue","editableButtonRef","React","editableInputRef","onDocMouseDown","onKeyDown","event","_b","key","el","range","sel","isClickableDisabled","defaultCloseButton","Button","TimesIcon","closeButton","css","textRef","componentRef","isTooltipVisible","setIsTooltipVisible","useIsomorphicLayoutEffect","currTextRef","content","cssTextMaxWidth","updateVal","LabelComponentChildElement","clickableLabelProps","isButton","labelComponentChildProps","labelComponentChild","Tooltip","LabelComponent","labelGrpStyles"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}