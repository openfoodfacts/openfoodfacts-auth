import{f as oe,B as ae,q as se,h as d,r as ie,s as S}from"./main-C-7qXKOl.js";import*as t from"react";import{useState as V}from"react";const n={label:"pf-v5-c-label",labelActions:"pf-v5-c-label__actions",labelContent:"pf-v5-c-label__content",labelIcon:"pf-v5-c-label__icon",labelText:"pf-v5-c-label__text",modifiers:{compact:"pf-m-compact",blue:"pf-m-blue",green:"pf-m-green",orange:"pf-m-orange",red:"pf-m-red",purple:"pf-m-purple",cyan:"pf-m-cyan",gold:"pf-m-gold",outline:"pf-m-outline",overflow:"pf-m-overflow",editableActive:"pf-m-editable-active",disabled:"pf-m-disabled"}},re={modifiers:{editable:"pf-m-editable"}},ce={name:"--pf-v5-c-label__text--MaxWidth"},de={blue:n.modifiers.blue,cyan:n.modifiers.cyan,green:n.modifiers.green,orange:n.modifiers.orange,purple:n.modifiers.purple,red:n.modifiers.red,gold:n.modifiers.gold,grey:""},fe=k=>{var{children:i,className:F="",color:q="grey",variant:H="filled",isCompact:K=!1,isDisabled:L=!1,isEditable:c=!1,editableProps:x,textMaxWidth:_,tooltipPosition:w,icon:O,onClose:P,onClick:r,onEditCancel:R,onEditComplete:u,closeBtn:$,closeBtnAriaLabel:z,closeBtnProps:G,href:s,isOverflowLabel:p,render:j}=k,J=oe(k,["children","className","color","variant","isCompact","isDisabled","isEditable","editableProps","textMaxWidth","tooltipPosition","icon","onClose","onClick","onEditCancel","onEditComplete","closeBtn","closeBtnAriaLabel","closeBtnProps","href","isOverflowLabel","render"]);const[o,f]=V(!1),[Q,U]=V(i),a=t.useRef(),l=t.useRef();t.useEffect(()=>(document.addEventListener("mousedown",B),document.addEventListener("keydown",I),()=>{document.removeEventListener("mousedown",B),document.removeEventListener("keydown",I)})),t.useEffect(()=>{r&&s?console.warn("Link labels cannot have onClick passed, this results in invalid HTML. Please remove either the href or onClick prop."):r&&c&&console.warn("Editable labels cannot have onClick passed, clicking starts the label edit process. Please remove either the isEditable or onClick prop.")},[r,s,c]);const B=e=>{o&&l&&l.current&&!l.current.contains(e.target)&&(l.current.value&&u&&u(e,l.current.value),f(!1))},I=e=>{var E,h;const v=e.key;if(!(!o&&(!a||!a.current||!a.current.contains(e.target))||o&&(!l||!l.current||!l.current.contains(e.target)))&&(o&&(v==="Enter"||v==="Tab")&&(e.preventDefault(),e.stopImmediatePropagation(),l.current.value&&u&&u(e,l.current.value),f(!1),(E=a?.current)===null||E===void 0||E.focus()),o&&v==="Escape"&&(e.preventDefault(),e.stopImmediatePropagation(),l.current.value&&(l.current.value=i,R&&R(e,i)),f(!1),(h=a?.current)===null||h===void 0||h.focus()),!o&&v==="Enter")){e.preventDefault(),e.stopImmediatePropagation(),f(!0);const le=e.target,y=document.createRange(),W=window.getSelection();y.selectNodeContents(le),y.collapse(!1),W.removeAllRanges(),W.addRange(y)}},b=(s||r)&&L,X=t.createElement(ae,Object.assign({type:"button",variant:"plain",onClick:P,"aria-label":z||`Close ${i}`},b&&{isDisabled:!0},G),t.createElement(se,null)),Y=t.createElement("span",{className:d(n.labelActions)},$||X),D=t.createRef(),N=t.useRef(),[C,Z]=t.useState(!1);ie(()=>{const e=c?a:D;o||Z(e.current&&e.current.offsetWidth<e.current.scrollWidth)},[o]);const A=t.createElement(t.Fragment,null,O&&t.createElement("span",{className:d(n.labelIcon)},O),t.createElement("span",Object.assign({ref:D,className:d(n.labelText)},_&&{style:{[ce.name]:_}}),i));t.useEffect(()=>{o&&l&&l.current&&l.current.focus()},[l,o]);const ee=()=>{U(l.current.value)};let m="span";s?m="a":(c||r&&!p)&&(m="button");const te={type:"button",onClick:r},T=m==="button",ne=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({className:d(n.labelContent)},C&&{tabIndex:0}),s&&{href:s}),s&&L&&{onClick:e=>e.preventDefault()}),T&&te),c&&Object.assign({ref:a,onClick:e=>{f(!0),e.stopPropagation()}},x)),b&&T&&{disabled:!0}),b&&s&&{tabIndex:-1,"aria-disabled":!0});let g=t.createElement(m,Object.assign({},ne),A);j?g=t.createElement(t.Fragment,null,C&&t.createElement(S,{triggerRef:N,content:i,position:w}),j({className:n.labelContent,content:A,componentRef:N})):C&&(g=t.createElement(S,{content:i,position:w},g));const M=p?"button":"span";return t.createElement(M,Object.assign({},J,{className:d(n.label,b&&n.modifiers.disabled,de[q],H==="outline"&&n.modifiers.outline,p&&n.modifiers.overflow,K&&n.modifiers.compact,c&&re.modifiers.editable,o&&n.modifiers.editableActive,F),onClick:p?r:void 0},M==="button"&&{type:"button"}),!o&&g,!o&&P&&Y,o&&t.createElement("input",Object.assign({className:d(n.labelContent),type:"text",id:"editable-input",ref:l,value:Q,onChange:ee},x)))};fe.displayName="Label";export{fe as L};
//# sourceMappingURL=Label-ssy25L53.js.map
