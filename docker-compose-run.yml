services:
  keycloak:
    environment:
      - KC_DB_URL_HOST
      - KC_DB_USERNAME
      - KC_DB_PASSWORD
      - KEYCLOAK_STARTUP
      - KC_BOOTSTRAP_ADMIN_USERNAME
      - KC_BOOTSTRAP_ADMIN_PASSWORD
      - KC_SPI_EVENTS_LISTENER_REDIS_EVENT_LISTENER_REDIS_URL=${REDIS_URL}
      - KC_HOSTNAME
      - KC_HOSTNAME_BACKCHANNEL_DYNAMIC=true
      - SMTP_SERVER
    ports:
      - "${KEYCLOAK_EXPOSE}${KEYCLOAK_HTTP_PORT}:8080"
      - "${KEYCLOAK_EXPOSE}${KEYCLOAK_MANAGEMENT_PORT}:9000"
    depends_on:
      smtp:
        condition: service_started
      keycloak_postgres:
        condition: service_started
    networks:
      # Needed to access Redis
      shared_network:

  keycloak_postgres:
    image: postgres:16-alpine
    environment:
      # PostgreSQL will also create a database with this name
      - POSTGRES_USER=${PG_ADMIN_USERNAME}
      - POSTGRES_PASSWORD=${PG_ADMIN_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_ADMIN_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      # Needed so create_user script can connect
      shared_network:

  smtp:
    image: rnwood/smtp4dev:latest
    volumes:
      - smtpdata:/smtp4dev
    ports:
      - ${KEYCLOAK_EXPOSE}${SMTP4DEV_PORT}:80

volumes:
  smtpdata:
  pgdata:
    external: true
    name: ${COMPOSE_PROJECT_NAME}_pgdata

networks:
  # This network allows access to shared services like MongoDB and Redis
  shared_network:
    name: ${COMMON_NET_NAME}
    external: true
